{"version":3,"file":"static/js/16.f810a83a.chunk.js","mappings":"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","sources":["common/Axios.ts","common/Constant.ts","core/table.tsx","containers/PerformanceReport/service.ts","containers/PerformanceReport/index.tsx","core/page.ts","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import { Octokit } from \"@octokit/rest\";\nimport axios from \"axios\";\n\nexport const AxionConfig = axios.create({\n  baseURL:process.env.REACT_APP_DYNAMODB_URL,\n  timeout: 3000,\n  headers: {\n    \"x-api-key\": process.env.REACT_APP_DYNAMODB_TOKEN,\n  },\n  responseType: \"json\",\n  maxRedirects: 21,\n});\n\nexport const OctokitConfig = new Octokit({\n  auth: process.env.REACT_APP_GITHUB_SECRET_TOKEN,\n});\n","export const USE_CASE: string[] = [\"statsd\", \"logs\", \"disk\"];\nexport const REPORTED_METRICS: string[] = [\"procstat_cpu_usage\", \"procstat_memory_rss\"];\nexport const TRANSACTION_PER_MINUTE: number[] = [100, 1000, 5000];\nexport const OWNER_REPOSITORY: string = \"aws\";\nexport const SERVICE_NAME: string = \"AmazonCloudWatchAgent\";\nexport const CONVERT_REPORTED_METRICS_NAME: { [metric_name: string]: string } = {\n  procstat_cpu_usage: \"CPU Usage\",\n  procstat_memory_rss: \"Memory Resource\",\n  procstat_memory_swap: \"Memory Swap\",\n  procstat_memory_vms: \"Virtual Memory\",\n  procstat_memory_data: \"Swap Memory\",\n  procstat_num_fds: \"File Descriptors\",\n  procstat_write_bytes: \"Write Disk Bytes\",\n  net_bytes_sent: \"Net Bytes Sent\",\n  net_packets_sent: \"Net Packages Sent\",\n};","import Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { UseCaseData } from \"../containers/PerformanceReport/data.js\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    border: \"1px solid #000\",\n    textAlign: \"center\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    border: \"1px solid #000\",\n    textAlign: \"center\",\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {},\n}));\n\nexport function PerformanceTable(props: { use_cases: UseCaseData[]; data_rate: string }): JSX.Element {\n  const { use_cases, data_rate } = props;\n  return (\n    <TableContainer sx={{ mb: 4 }} component={Paper}>\n      <Table sx={{ borderStyle: \"solid\" }} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell width=\"50vw\" align=\"center\" sx={{ fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Use Case\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Instance Type\n            </StyledTableCell>\n            <StyledTableCell width=\"50%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg CPU Usage (%)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Memory Usage (%)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Memory Swap (%)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Memory Data (%)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Virtual Memory (%)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Write Disk Bytes (MB)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" align=\"center\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              File Descriptors\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Net Bytes Sent (MB)\n            </StyledTableCell>\n            <StyledTableCell width=\"30%\" sx={{ border: \"1px solid #000\", fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>\n              Avg Net Packages Sent (MB)\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {use_cases?.map((use_case) => (\n            <StyledTableRow key={use_case.name}>\n              <StyledTableCell>{use_case.name}</StyledTableCell>\n              <StyledTableCell>{use_case.instance_type}</StyledTableCell>\n              <StyledTableCell>{Number(use_case.data?.[data_rate]?.procstat_cpu_usage).toFixed(2)}</StyledTableCell>\n              <StyledTableCell>\n                {(Number(use_case.data?.[data_rate]?.procstat_memory_rss) / Number(use_case.data?.[data_rate]?.mem_total)).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(Number(use_case.data?.[data_rate]?.procstat_memory_swap) / Number(use_case.data?.[data_rate]?.mem_total)).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(Number(use_case.data?.[data_rate]?.procstat_memory_data) / Number(use_case.data?.[data_rate]?.mem_total)).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(Number(use_case.data?.[data_rate]?.procstat_memory_vms) / Number(use_case.data?.[data_rate]?.mem_total)).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>{Number(use_case.data?.[data_rate]?.procstat_write_bytes).toFixed(2)}</StyledTableCell>\n              <StyledTableCell>{Number(use_case.data?.[data_rate]?.procstat_num_fds).toFixed(2)}</StyledTableCell>\n              <StyledTableCell>{Number(use_case.data?.[data_rate]?.net_bytes_sent).toFixed(2)}</StyledTableCell>\n              <StyledTableCell>{Number(use_case.data?.[data_rate]?.net_packets_sent).toFixed(2)}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import moment from \"moment\";\nimport { AxionConfig, OctokitConfig } from \"../../common/Axios\";\nimport { OWNER_REPOSITORY, SERVICE_NAME, USE_CASE } from \"../../common/Constant\";\nimport { PerformanceMetricReport, PerformanceMetricReportParams, ServiceLatestVersion, ServicePRInformation } from \"./data.js\";\nexport async function GetLatestPerformanceReports(): Promise<PerformanceMetricReport[]> {\n  return GetPerformanceReports({\n    TableName: process.env.REACT_APP_DYNAMODB_NAME || \"\",\n    Limit: USE_CASE.length,\n    IndexName: \"ServiceDate\",\n    KeyConditions: {\n      Service: {\n        ComparisonOperator: \"EQ\",\n        AttributeValueList: [\n          {\n            S: SERVICE_NAME,\n          },\n        ],\n      },\n      CommitDate: {\n        ComparisonOperator: \"LE\",\n        AttributeValueList: [\n          {\n            N: moment().unix().toString(),\n          },\n        ],\n      },\n    },\n    ScanIndexForward: false,\n  });\n}\n\nasync function GetPerformanceReports(params: PerformanceMetricReportParams): Promise<PerformanceMetricReport[]> {\n  return AxionConfig.post(\"/\", { Action: \"Query\", Params: params })\n    .then(function (body: { data: { Items: PerformanceMetricReport[] } }) {\n      return body?.data?.Items;\n    })\n    .catch(function (error: unknown) {\n      return Promise.reject(error);\n    });\n}\n\nexport async function GetServiceLatestVersion(): Promise<ServiceLatestVersion> {\n  return OctokitConfig.request(\"GET /repos/{owner}/{repo}/releases/latest\", {\n    owner: OWNER_REPOSITORY,\n    repo: process.env.REACT_APP_GITHUB_REPOSITORY || \"\",\n  })\n    .then(function (body: any) {\n      return body?.data;\n    })\n    .catch(function (error: unknown) {\n      return Promise.reject(error);\n    });\n}\n\nexport async function GetServicePRInformation(commit_sha: string): Promise<ServicePRInformation> {\n  return OctokitConfig.request(\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", {\n    owner: OWNER_REPOSITORY,\n    repo: process.env.REACT_APP_GITHUB_REPOSITORY || \"\",\n    commit_sha: commit_sha,\n  })\n    .then(function (body: { data: any[] }) {\n      return Promise.resolve(body.data.at(0));\n    })\n    .catch(function (error: unknown) {\n      return Promise.reject(error);\n    });\n}","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\nimport {\n    CircularProgress,\n    Container,\n    Link,\n    MenuItem,\n    Paper,\n    Select,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Typography,\n  } from \"@mui/material\";\n  import moment from \"moment\";\n  import * as React from \"react\";\n  import { TRANSACTION_PER_MINUTE } from \"../../common/Constant\";\n  import { usePageEffect } from \"../../core/page\";\n  import { PerformanceTable } from \"../../core/table\";\n  import { UseCaseData } from \"./data\";\n  import { GetLatestPerformanceReports, GetServiceLatestVersion, GetServicePRInformation } from \"./service\";\n  \n  export default function PerformanceReport(): JSX.Element {\n    usePageEffect({ title: \"Amazon CloudWatch Agent\" });\n  \n    const [{ version, commit_date, commit_title, commit_url, use_cases, ami_id, collection_period }, ] = useStatePerformanceReport();\n    const [{ data_type }, setDataTypeState] = useStateDataType();\n  \n    return !version || !commit_title ? (\n      <Container sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\" }}>\n        <CircularProgress color=\"inherit\" />\n      </Container>\n    ) : (\n      <Container sx={{ py: \"5vh\", border: \"1px solid\" }} maxWidth=\"lg\">\n        <Container sx={{ mb: 4 }}>\n          <Typography sx={{ mb: 2, fontWeight: \"bold\" }} variant=\"h2\">\n            Performance Report\n            <hr />\n          </Typography>\n        </Container>\n        <Container sx={{ mb: 4 }}>\n          <TableContainer sx={{ mb: 4, display: \"flex\", justifyContent: \"center\", boxShadow: \"unset\" }} component={Paper}>\n            <Table sx={{ borderStyle: \"solid\", width: \"fit-content\" }} size=\"small\" aria-label=\"a dense table\">\n              <TableBody>\n                {[\"Version\", \"Architectural\", \"Collection Period\", \"Testing AMI\", \"Commit Name\", \"Commit Date\", \"Data type\"]?.map((name) => (\n                  <TableRow key={name}>\n                    <TableCell sx={{ border: \"1px solid #000\", fontWeight: \"bold\" }}>{name}</TableCell>\n                    <TableCell sx={{ border: \"1px solid #000\", textAlign: \"center\" }}>\n                      {name === \"Version\" ? (\n                        <Link href={`https://github.com/aws/amazon-cloudwatch-agent/releases/tag/${version}`}>{version}</Link>\n                      ) : name === \"Architectural\" ? (\n                        <Typography variant=\"h4\">EC2</Typography>\n                      ) : name === \"Collection Period\" ? (\n                        <Typography variant=\"h4\">{collection_period}s</Typography>\n                      ) : name === \"Testing AMI\" ? (\n                        <Typography variant=\"h4\">{ami_id}</Typography>\n                      ) : name === \"Commit Name\" ? (\n                        <Link href={commit_url} variant=\"h4\">\n                          {commit_title}\n                        </Link>\n                      ) : name === \"Commit Date\" ? (\n                        <Typography variant=\"h4\">{commit_date}</Typography>\n                      ) : (\n                        <Select\n                          sx={{ height: \"41px\" }}\n                          value={data_type}\n                          onChange={(e: { target: { value: string } }) => setDataTypeState({ data_type: e.target.value })}\n                        >\n                          <MenuItem value={\"Metrics\"}>Metric</MenuItem>\n                          <MenuItem value={\"Traces\"}>Trace</MenuItem>\n                          <MenuItem value={\"Logs\"}>Logs</MenuItem>\n                        </Select>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <hr />\n        </Container>\n        {TRANSACTION_PER_MINUTE.map((tpm) => (\n          <Container key={tpm}>\n            <Typography sx={{ mb: 2, fontWeight: \"bold\" }} variant=\"h3\">\n              {data_type} (TPM: {tpm}){\" \"}\n            </Typography>\n            <PerformanceTable\n              data_rate={String(tpm)}\n              use_cases={use_cases.filter((use_case: UseCaseData) => use_case?.data_type === data_type.toLowerCase())}\n            />\n          </Container>\n        ))}\n      </Container>\n    );\n  }\n  \n  function useStatePerformanceReport() {\n    const [state, setState] = React.useState({\n      version: undefined as string | undefined,\n      commit_url: undefined as string | undefined,\n      commit_date: undefined as string | undefined,\n      commit_title: undefined as string | undefined,\n      use_cases: [] as UseCaseData[] ,\n      ami_id: undefined as string | undefined,\n      collection_period: undefined as string | undefined,\n      error: undefined as string | undefined,\n    });\n  \n    React.useEffect(() => {\n      (async () => {\n        var [service_info, performance_reports] = await Promise.all([GetServiceLatestVersion(), GetLatestPerformanceReports()]);\n        if (service_info == null || performance_reports == null || performance_reports.length === 0) {\n          return;\n        }\n  \n        let use_cases: UseCaseData[] = [];\n        // We only get the latest commit ID; therefore, only use case are different; however, general metadata\n        // information (e.g Commit_Hash, Commit_Date of the PR) would be the same for all datas.\n        const commit_hash = performance_reports.at(0)?.CommitHash.S || \"\";\n        const commit_date = performance_reports.at(0)?.CommitDate.N;\n        const collection_period = performance_reports.at(0)?.CollectionPeriod.S;\n        const ami_id = performance_reports.at(0)?.InstanceAMI.S;\n        for (let pReport of performance_reports) {\n          // Instead of using Max, Min, Std, P99, we would use Avg for every collected metrics\n          use_cases.push({\n            name: pReport?.UseCase.S,\n            data_type: pReport?.DataType.S,\n            instance_type: pReport?.InstanceType.S,\n            data: TRANSACTION_PER_MINUTE.reduce(\n              (accu, tpm) => ({\n                ...accu,\n                [tpm]: {\n                  procstat_cpu_usage: pReport?.Results.M[tpm]?.M?.procstat_cpu_usage?.M?.Average?.N,\n                  procstat_memory_rss: pReport?.Results.M[tpm]?.M?.procstat_memory_rss?.M?.Average?.N,\n                  procstat_memory_swap: pReport?.Results.M[tpm]?.M?.procstat_memory_swap?.M?.Average?.N,\n                  procstat_memory_vms: pReport?.Results.M[tpm]?.M?.procstat_memory_vms?.M?.Average?.N,\n                  procstat_memory_data: pReport?.Results.M[tpm]?.M?.procstat_memory_data?.M?.Average?.N,\n                  procstat_write_bytes: pReport?.Results.M[tpm]?.M?.procstat_write_bytes?.M?.Average?.N,\n                  procstat_num_fds: pReport?.Results.M[tpm]?.M?.procstat_num_fds?.M?.Average?.N,\n                  net_bytes_sent: pReport?.Results.M[tpm]?.M?.net_bytes_sent?.M?.Average?.N,\n                  net_packets_sent: pReport?.Results.M[tpm]?.M?.net_packets_sent?.M?.Average?.N,\n                  mem_total: pReport?.Results.M[tpm]?.M?.mem_total?.M?.Average?.N,\n                },\n              }),\n              {}\n            ),\n          });\n        }\n  \n        var commit_info = await GetServicePRInformation(commit_hash);\n  \n        setState((prev: any) => ({\n          ...prev,\n          version: service_info.tag_name,\n          ami_id: ami_id,\n          collection_period: collection_period,\n          use_cases: use_cases,\n          commit_title: `${commit_info.title} (#${commit_info.number})`,\n          commit_url: commit_info.html_url,\n          commit_date: moment.unix(Number(commit_date)).format(\"dddd, MMMM Do, YYYY h:mm:ss A\"),\n        }));\n      })();\n    }, [setState]);\n  \n    return [state, setState] as const;\n  }\n  \n  function useStateDataType() {\n    const [state, setState] = React.useState({\n      data_type: \"Metrics\" as \"Metrics\" | \"Traces\" | \"Logs\" | string,\n    });\n  \n    return [state, setState] as const;\n  }","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\n\nimport * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function usePageEffect(options?: Options, deps?: React.DependencyList) {\n  const location = useLocation();\n  // Once the page component was rendered, update the HTML document's title\n  React.useEffect(() => {\n    const previousTitle = document.title;\n\n    document.title = location.pathname === \"/\" && options?.title ? `${options.title} ` : \"AWS\";\n\n    return function () {\n      document.title = previousTitle;\n    };\n  }, deps ?? []); /* eslint-disable-line react-hooks/exhaustive-deps */\n}\n\ntype Options = {\n  title?: string;\n  /** @default true */\n  trackPageView?: boolean;\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["AxionConfig","axios","baseURL","process","timeout","headers","responseType","maxRedirects","OctokitConfig","Octokit","auth","USE_CASE","REPORTED_METRICS","TRANSACTION_PER_MINUTE","OWNER_REPOSITORY","SERVICE_NAME","CONVERT_REPORTED_METRICS_NAME","procstat_cpu_usage","procstat_memory_rss","procstat_memory_swap","procstat_memory_vms","procstat_memory_data","procstat_num_fds","procstat_write_bytes","net_bytes_sent","net_packets_sent","StyledTableCell","styled","TableCell","_ref","_ref2","theme","_defineProperty","concat","tableCellClasses","backgroundColor","palette","common","black","color","white","border","textAlign","fontSize","StyledTableRow","TableRow","_ref3","action","hover","PerformanceTable","props","use_cases","data_rate","_jsx","TableContainer","sx","mb","component","Paper","children","_jsxs","Table","borderStyle","size","TableHead","width","align","fontWeight","whiteSpace","TableBody","map","use_case","_use_case$data","_use_case$data$data_r","_use_case$data2","_use_case$data2$data_","_use_case$data3","_use_case$data3$data_","_use_case$data4","_use_case$data4$data_","_use_case$data5","_use_case$data5$data_","_use_case$data6","_use_case$data6$data_","_use_case$data7","_use_case$data7$data_","_use_case$data8","_use_case$data8$data_","_use_case$data9","_use_case$data9$data_","_use_case$data10","_use_case$data10$data","_use_case$data11","_use_case$data11$data","_use_case$data12","_use_case$data12$data","_use_case$data13","_use_case$data13$data","name","instance_type","Number","data","toFixed","mem_total","GetLatestPerformanceReports","_GetLatestPerformanceReports","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","GetPerformanceReports","TableName","Limit","IndexName","KeyConditions","Service","ComparisonOperator","AttributeValueList","S","CommitDate","N","moment","unix","toString","ScanIndexForward","stop","_x","_GetPerformanceReports","_callee2","params","_context2","Action","Params","then","body","_body$data","Items","catch","error","Promise","reject","GetServiceLatestVersion","_GetServiceLatestVersion","_callee3","_context3","owner","repo","GetServicePRInformation","_x2","_GetServicePRInformation","_callee4","commit_sha","_context4","resolve","at","PerformanceReport","usePageEffect","title","_useStatePerformanceR","_React$useState","React","version","undefined","commit_url","commit_date","commit_title","ami_id","collection_period","_React$useState2","_slicedToArray","state","setState","_performance_reports$","_performance_reports$2","_performance_reports$3","_performance_reports$4","_yield$Promise$all","_yield$Promise$all2","service_info","performance_reports","commit_hash","_iterator","_step","_loop","commit_info","all","sent","length","CommitHash","CollectionPeriod","InstanceAMI","_createForOfIteratorHelper","pReport","value","push","UseCase","data_type","DataType","InstanceType","accu","tpm","_pReport$Results$M$tp","_pReport$Results$M$tp2","_pReport$Results$M$tp3","_pReport$Results$M$tp4","_pReport$Results$M$tp5","_pReport$Results$M$tp6","_pReport$Results$M$tp7","_pReport$Results$M$tp8","_pReport$Results$M$tp9","_pReport$Results$M$tp10","_pReport$Results$M$tp11","_pReport$Results$M$tp12","_pReport$Results$M$tp13","_pReport$Results$M$tp14","_pReport$Results$M$tp15","_pReport$Results$M$tp16","_pReport$Results$M$tp17","_pReport$Results$M$tp18","_pReport$Results$M$tp19","_pReport$Results$M$tp20","_pReport$Results$M$tp21","_pReport$Results$M$tp22","_pReport$Results$M$tp23","_pReport$Results$M$tp24","_pReport$Results$M$tp25","_pReport$Results$M$tp26","_pReport$Results$M$tp27","_pReport$Results$M$tp28","_pReport$Results$M$tp29","_pReport$Results$M$tp30","_pReport$Results$M$tp31","_pReport$Results$M$tp32","_pReport$Results$M$tp33","_pReport$Results$M$tp34","_pReport$Results$M$tp35","_pReport$Results$M$tp36","_pReport$Results$M$tp37","_pReport$Results$M$tp38","_pReport$Results$M$tp39","_pReport$Results$M$tp40","_pReport$Results$M$tp41","_pReport$Results$M$tp42","_pReport$Results$M$tp43","_pReport$Results$M$tp44","_pReport$Results$M$tp45","_pReport$Results$M$tp46","_pReport$Results$M$tp47","_pReport$Results$M$tp48","_pReport$Results$M$tp49","_pReport$Results$M$tp50","_objectSpread","Results","M","Average","s","n","done","delegateYield","t1","e","f","finish","tag_name","number","html_url","format","useStatePerformanceReport","_useStatePerformanceR3","_useStateDataType","_React$useState3","_React$useState4","useStateDataType","_useStateDataType2","setDataTypeState","Container","py","maxWidth","Typography","variant","display","justifyContent","boxShadow","Link","href","Select","height","onChange","target","MenuItem","String","filter","toLowerCase","alignItems","CircularProgress","options","deps","location","useLocation","previousTitle","document","pathname","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","as","clsx","role"],"sourceRoot":""}